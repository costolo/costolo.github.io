(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../pkg/wasm_game_of_life.js":
/*!***********************************!*\
  !*** ../pkg/wasm_game_of_life.js ***!
  \***********************************/
/*! exports provided: __wbg_error_cc95a3d302735ca3, __wbg_random_acb9bafd226853d8, Universe, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_error_cc95a3d302735ca3\", function() { return __wbg_error_cc95a3d302735ca3; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_random_acb9bafd226853d8\", function() { return __wbg_random_acb9bafd226853d8; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Universe\", function() { return Universe; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wasm_game_of_life_bg */ \"../pkg/wasm_game_of_life_bg.wasm\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/* tslint:disable */\n\nvar cachedTextEncoder = new TextEncoder('utf-8');\nvar cachegetUint8Memory = null;\n\nfunction getUint8Memory() {\n  if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== _wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n    cachegetUint8Memory = new Uint8Array(_wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n  }\n\n  return cachegetUint8Memory;\n}\n\nvar WASM_VECTOR_LEN = 0;\n\nfunction passStringToWasm(arg) {\n  var buf = cachedTextEncoder.encode(arg);\n\n  var ptr = _wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"](buf.length);\n\n  getUint8Memory().set(buf, ptr);\n  WASM_VECTOR_LEN = buf.length;\n  return ptr;\n}\n\nvar cachedTextDecoder = new TextDecoder('utf-8');\n\nfunction getStringFromWasm(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nfunction __wbg_error_cc95a3d302735ca3(arg0, arg1) {\n  var varg0 = getStringFromWasm(arg0, arg1);\n  varg0 = varg0.slice();\n\n  _wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](arg0, arg1 * 1);\n\n  console.error(varg0);\n}\nfunction __wbg_random_acb9bafd226853d8() {\n  return Math.random();\n}\n\nfunction freeUniverse(ptr) {\n  _wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_universe_free\"](ptr);\n}\n/**\n*/\n\n\nvar Universe =\n/*#__PURE__*/\nfunction () {\n  function Universe() {\n    _classCallCheck(this, Universe);\n  }\n\n  _createClass(Universe, [{\n    key: \"free\",\n    value: function free() {\n      var ptr = this.ptr;\n      this.ptr = 0;\n      freeUniverse(ptr);\n    }\n    /**\n    * @returns {Universe}\n    */\n\n  }, {\n    key: \"tick\",\n\n    /**\n    * @returns {void}\n    */\n    value: function tick() {\n      return _wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_0__[\"universe_tick\"](this.ptr);\n    }\n    /**\n    * @returns {void}\n    */\n\n  }, {\n    key: \"generate_random_cells\",\n    value: function generate_random_cells() {\n      return _wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_0__[\"universe_generate_random_cells\"](this.ptr);\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @param {string} arg2\n    * @returns {void}\n    */\n\n  }, {\n    key: \"draw_glider\",\n    value: function draw_glider(arg0, arg1, arg2) {\n      var ptr2 = passStringToWasm(arg2);\n      var len2 = WASM_VECTOR_LEN;\n      return _wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_0__[\"universe_draw_glider\"](this.ptr, arg0, arg1, ptr2, len2);\n    }\n    /**\n    * @returns {void}\n    */\n\n  }, {\n    key: \"kill_all_cells\",\n    value: function kill_all_cells() {\n      return _wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_0__[\"universe_kill_all_cells\"](this.ptr);\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @returns {void}\n    */\n\n  }, {\n    key: \"toggle_cell\",\n    value: function toggle_cell(arg0, arg1) {\n      return _wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_0__[\"universe_toggle_cell\"](this.ptr, arg0, arg1);\n    }\n    /**\n    * @param {number} arg0\n    * @returns {void}\n    */\n\n  }, {\n    key: \"set_width\",\n    value: function set_width(arg0) {\n      return _wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_0__[\"universe_set_width\"](this.ptr, arg0);\n    }\n    /**\n    * @param {number} arg0\n    * @returns {void}\n    */\n\n  }, {\n    key: \"set_height\",\n    value: function set_height(arg0) {\n      return _wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_0__[\"universe_set_height\"](this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"width\",\n    value: function width() {\n      return _wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_0__[\"universe_width\"](this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"height\",\n    value: function height() {\n      return _wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_0__[\"universe_height\"](this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"cells\",\n    value: function cells() {\n      return _wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_0__[\"universe_cells\"](this.ptr);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(ptr) {\n      var obj = Object.create(Universe.prototype);\n      obj.ptr = ptr;\n      return obj;\n    }\n  }, {\n    key: \"new\",\n    value: function _new() {\n      return Universe.__wrap(_wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_0__[\"universe_new\"]());\n    }\n  }]);\n\n  return Universe;\n}();\nfunction __wbindgen_throw(ptr, len) {\n  throw new Error(getStringFromWasm(ptr, len));\n}\n\n//# sourceURL=webpack:///../pkg/wasm_game_of_life.js?");

/***/ }),

/***/ "../pkg/wasm_game_of_life_bg.wasm":
/*!****************************************!*\
  !*** ../pkg/wasm_game_of_life_bg.wasm ***!
  \****************************************/
/*! exports provided: memory, __wbg_universe_free, universe_new, universe_tick, universe_generate_random_cells, universe_draw_glider, universe_kill_all_cells, universe_toggle_cell, universe_set_width, universe_set_height, universe_width, universe_height, universe_cells, __wbindgen_malloc, __wbindgen_free */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./wasm_game_of_life */ \"../pkg/wasm_game_of_life.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/wasm_game_of_life_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var wasm_game_of_life__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wasm-game-of-life */ \"../pkg/wasm_game_of_life.js\");\n/* harmony import */ var wasm_game_of_life_wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wasm-game-of-life/wasm_game_of_life_bg */ \"../pkg/wasm_game_of_life_bg.wasm\");\n/* harmony import */ var typeit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! typeit */ \"./node_modules/typeit/dist/typeit.min.js\");\n/* harmony import */ var typeit__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeit__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nvar RULES = [\"- any live cell with fewer than two live neighbors dies\", \"- any live cell with two or three live neighbors lives on to the next generation\", \"- any live cell with more than three live neighbors dies\", \"- any dead cell with exactly three live neighbors becomes a live cell\"];\nvar typeIt = new typeit__WEBPACK_IMPORTED_MODULE_2___default.a(\"#rules\", {\n  strings: RULES,\n  cursorChar: \"_\",\n  breakLines: true,\n  speed: 25\n});\ntypeIt.go();\nvar CELL_SIZE = 10;\nvar GRID_COLOR = \"#666\";\nvar DEAD_COLOR = \"#000000\";\nvar ALIVE_COLOR = \"#32CD32\";\nvar universe = wasm_game_of_life__WEBPACK_IMPORTED_MODULE_0__[\"Universe\"].new();\nvar width = universe.width();\nvar height = universe.height();\nvar canvas = document.getElementById(\"game-of-life-canvas\");\ncanvas.width = (CELL_SIZE + 1) * width + 1;\ncanvas.height = (CELL_SIZE + 1) * height + 1;\nvar ctx = canvas.getContext(\"2d\");\nvar animationId = null;\n\nvar isPaused = function isPaused() {\n  return animationId === null;\n};\n\nvar renderLoop = function renderLoop() {\n  universe.tick();\n  drawCells();\n  animationId = requestAnimationFrame(renderLoop);\n};\n\nvar getIndex = function getIndex(row, column) {\n  return row * width + column;\n};\n\nvar drawGrid = function drawGrid() {\n  ctx.beginPath();\n  ctx.strokeStyle = GRID_COLOR; // vertical lines\n\n  for (var i = 0; i <= width; i++) {\n    ctx.moveTo(i * (CELL_SIZE + 1) + 1, 0);\n    ctx.lineTo(i * (CELL_SIZE + 1) + 1, (CELL_SIZE + 1) * height + 1);\n  } // horizontal lines\n\n\n  for (var j = 0; j <= height; j++) {\n    ctx.moveTo(0, j * (CELL_SIZE + 1) + 1);\n    ctx.lineTo((CELL_SIZE + 1) * width + 1, j * (CELL_SIZE + 1) + 1);\n  }\n\n  ctx.stroke();\n};\n\nvar bitIsSet = function bitIsSet(n, arr) {\n  var byte = Math.floor(n / 8);\n  var mask = 1 << n % 8;\n  return (arr[byte] & mask) === mask;\n};\n\nvar drawCells = function drawCells() {\n  var cellsPtr = universe.cells();\n  var cells = new Uint8Array(wasm_game_of_life_wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, cellsPtr, width * height / 8);\n  ctx.beginPath();\n\n  for (var row = 0; row < height; row++) {\n    for (var col = 0; col < width; col++) {\n      var idx = getIndex(row, col);\n      ctx.fillStyle = bitIsSet(idx, cells) ? ALIVE_COLOR : DEAD_COLOR;\n      ctx.fillRect(col * (CELL_SIZE + 1) + 1, row * (CELL_SIZE + 1) + 1, CELL_SIZE, CELL_SIZE);\n    }\n  }\n};\n\nvar playPauseButton = document.getElementById(\"play-pause\");\n\nvar play = function play() {\n  playPauseButton.textContent = \"pause\";\n  renderLoop();\n};\n\nvar pause = function pause() {\n  playPauseButton.textContent = \"play\";\n  cancelAnimationFrame(animationId);\n  animationId = null;\n};\n\nplayPauseButton.addEventListener(\"click\", function (event) {\n  if (isPaused()) {\n    play();\n  } else {\n    pause();\n  }\n});\nvar clearButton = document.getElementById(\"clear\");\nclearButton.addEventListener(\"click\", function () {\n  pause();\n  universe.kill_all_cells();\n  drawCells();\n});\nvar randomButton = document.getElementById(\"random\");\nrandomButton.addEventListener(\"click\", function () {\n  pause();\n  universe.generate_random_cells();\n  drawCells();\n});\n\nvar gliderInput = function gliderInput() {\n  return document.querySelectorAll('input[name=\"glider\"]:checked')[0].value;\n};\n\ncanvas.addEventListener(\"click\", function (e) {\n  var boundingRect = canvas.getBoundingClientRect();\n  var scaleX = canvas.width / boundingRect.width;\n  var scaleY = canvas.height / boundingRect.height;\n  var canvasLeft = (e.clientX - boundingRect.left) * scaleX;\n  var canvasTop = (e.clientY - boundingRect.top) * scaleY;\n  var row = Math.min(Math.floor(canvasTop / (CELL_SIZE + 1)), height - 1);\n  var col = Math.min(Math.floor(canvasLeft / (CELL_SIZE + 1)), width - 1);\n  var input = gliderInput();\n\n  if (input === \"cell\") {\n    universe.toggle_cell(row, col);\n  } else {\n    universe.draw_glider(row, col, input);\n  }\n\n  drawCells();\n});\ndrawGrid();\ndrawCells();\n\n//# sourceURL=webpack:///./index.js?");

/***/ })

}]);